# Golang CircleCI 2.0 configuration file 
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/golang:latest

    working_directory: /home/circleci/TySug
    steps:
      - checkout
      - run: go version
      - run: for p in GOPATH GOBIN GOROOT; do echo "${p} ${!p}"; done
      - run: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run: go get -v -t -d ./...
      - run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b $(go env GOPATH)/bin v1.14.0
      - run: golangci-lint run
      - run: go test -test.v -test.cover -test.race -test.coverprofile=coverage.txt -test.covermode=atomic ./... 
      - run: bash <(curl -s https://codecov.io/bash)

  publish-image:
    docker:
      - image: circleci/golang:latest

    working_directory: /home/circleci/TySug
    steps:
      - checkout
      - run:
          name: Building docker image
          command: |
            TAG=${CIRCLE_TAG:-devel}
            docker build -t dynom/tysug:${TAG} \
                --build-arg VERSION=${TAG} \
                --build-arg GIT_REF=${CIRCLE_SHA1} \
                . &&
            docker tag dynom/tysug:${TAG} dynom/tysug:latest
      - run: #docker login # @todo, figure out how to login, without exposing my creds -_-'
      - run: docker push dynom/tysug

workflows:
  version: 2
  build-test-push:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - publish-image:
          requires:
            - build-and-test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/